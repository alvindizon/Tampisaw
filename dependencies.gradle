/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
ext.deps = [:]
def versions = [:]

versions.kotlinVersion = "1.7.20"
versions.navigationVersion = "2.4.2"
versions.androidGradlePluginVersion = '7.2.1'
versions.appCompatVersion = "1.4.1"
versions.constraintLayoutVersion = "2.1.3"
versions.espressoVersion = "3.4.0"
versions.glideVersion = "4.13.2"
versions.ktxVersion = "1.7.0"
versions.lifecycleVersion = "2.4.1"
versions.pagingVersion = "3.1.1"
versions.retrofitVersion = "2.9.0"
versions.testExtJunitVersion = "1.1.3"
versions.rxJavaVersion = "3.1.5"
versions.moshiVersion = "1.14.0"
versions.materialVersion = "1.5.0"
versions.findBugsVersion = "3.0.2"
versions.okHttpLogInterceptorVer = "4.10.0"
versions.fabVersion = "1.2.1"
versions.workVersion = "2.7.1"
versions.okioVersion = "3.2.0"
versions.swipeRefreshLayoutVersion= "1.1.0"
versions.coreTestingVersion = "2.1.0"
versions.coroutineVersion = "1.6.4"
versions.rxAndroidVersion = "3.0.0"
versions.rxKotlinVersion = "3.0.1"
versions.mockkVersion = "1.12.5"
versions.junitVersion = "5.9.1"
versions.hiltVersion = "2.44"
versions.hiltAndroidXVersion = "1.0.0"
versions.timberVersion = "5.0.1"
versions.splashScreenVersion = "1.0.0-beta02"
versions.leakCanaryVersion = "2.9.1"
versions.concurrentVersion = "1.1.0"
versions.googleServicesVersion = "4.3.10"
versions.firebaseVersion = "29.3.0"
versions.crashlyticsPluginVersion = "2.8.1"
versions.detektVersion = "1.19.0"

ext.versions = versions

def buildVersions = [:]
    buildVersions.minSdk = 23
    buildVersions.compileSdk = 33
    buildVersions.targetSdk = 33
ext.buildVersions = buildVersions

def deps = [:]

deps.AGP = "com.android.tools.build:gradle:$versions.androidGradlePluginVersion"
deps.kotlinGradlePlugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlinVersion"
deps.googleServicesPlugin = "com.google.gms:google-services:$versions.googleServicesVersion"
deps.detekt = "io.gitlab.arturbosch.detekt"

def androidX = [:]
    androidX.coreKtx = "androidx.core:core-ktx:$versions.ktxVersion"
    androidX.appCompat = "androidx.appcompat:appcompat:$versions.appCompatVersion"
    androidX.constraintLayout = "androidx.constraintlayout:constraintlayout:$versions.constraintLayoutVersion"
    androidX.futures = "androidx.concurrent:concurrent-futures-ktx:$versions.concurrentVersion"
    androidX.swipeRefreshLayout = "androidx.swiperefreshlayout:swiperefreshlayout:$versions.swipeRefreshLayoutVersion"
    androidX.splashScreen =  "androidx.core:core-splashscreen:$versions.splashScreenVersion"
    androidX.hiltCompiler = "androidx.hilt:hilt-compiler:$versions.hiltAndroidXVersion"
    androidX.hiltWork = "androidx.hilt:hilt-work:$versions.hiltAndroidXVersion"

    def lifecycle = [:]
        lifecycle.viewmodel = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycleVersion"
        lifecycle.livedata =  "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycleVersion"
        lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycleVersion"
        lifecycle.common = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycleVersion"
        lifecycle.reactiveStreams = "androidx.lifecycle:lifecycle-reactivestreams-ktx:$versions.lifecycleVersion"
    androidX.lifecycle = lifecycle

    def navigation = [:]
        navigation.fragment = "androidx.navigation:navigation-fragment-ktx:$versions.navigationVersion"
        navigation.ui = "androidx.navigation:navigation-ui-ktx:$versions.navigationVersion"
        navigation.safeArgsPlugin = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigationVersion"
    androidX.navigation = navigation

    def work = [:]
        work.runtime = "androidx.work:work-runtime-ktx:$versions.workVersion"
        work.rxjava =  "androidx.work:work-rxjava3:$versions.workVersion"
    androidX.work = work

    def paging = [:]
        paging.runtime = "androidx.paging:paging-runtime:$versions.pagingVersion"
        paging.rxjava =  "androidx.paging:paging-rxjava3:$versions.pagingVersion"
    androidX.paging = paging

    def test = [:]
        test.core = "androidx.arch.core:core-testing:$versions.coreTestingVersion"
        test.testExtJunit = "androidx.test.ext:junit:$versions.testExtJunitVersion"
        test.espresso = "androidx.test.espresso:espresso-core:$versions.espressoVersion"
    androidX.test = test

deps.androidX = androidX

def dagger = [:]
    dagger.hilt = "com.google.dagger:hilt-android:$versions.hiltVersion"
    dagger.hiltCompiler = "com.google.dagger:hilt-android-compiler:$versions.hiltVersion"
    dagger.hiltPlugin = "com.google.dagger:hilt-android-gradle-plugin:$versions.hiltVersion"
deps.dagger = dagger

deps.material = "com.google.android.material:material:$versions.materialVersion"

def rxjava = [:]
    rxjava.rxandroid = "io.reactivex.rxjava3:rxandroid:$versions.rxAndroidVersion"
    rxjava.rxjava = "io.reactivex.rxjava3:rxjava:$versions.rxJavaVersion"
    rxjava.rxkotlin =  "io.reactivex.rxjava3:rxkotlin:$versions.rxKotlinVersion"
deps.rxjava = rxjava

deps.findBugs = "com.google.code.findbugs:jsr305:$versions.findBugsVersion"

def network = [:]
    network.interceptor = "com.squareup.okhttp3:logging-interceptor:$versions.okHttpLogInterceptorVer"
    network.okio = "com.squareup.okio:okio:$versions.okioVersion"

    def retrofit = [:]
        retrofit.retrofit =  "com.squareup.retrofit2:retrofit:$versions.retrofitVersion"
        retrofit.rxjava =  "com.squareup.retrofit2:adapter-rxjava3:$versions.retrofitVersion"
        retrofit.moshi =  "com.squareup.retrofit2:converter-moshi:$versions.retrofitVersion"
    network.retrofit = retrofit

    def moshi = [:]
        moshi.moshi =  "com.squareup.moshi:moshi:$versions.moshiVersion"
        moshi.codegen =  "com.squareup.moshi:moshi-kotlin-codegen:$versions.moshiVersion"
    network.moshi = moshi

deps.network = network

deps.glide = "com.github.bumptech.glide:glide:$versions.glideVersion"

deps.expandableFAB = "com.nambimobile.widgets:expandable-fab:$versions.fabVersion"

deps.timber = "com.jakewharton.timber:timber:$versions.timberVersion"

def firebase = [:]
    firebase.bom = "com.google.firebase:firebase-bom:$versions.firebaseVersion"
    firebase.analytics = "com.google.firebase:firebase-analytics-ktx"
    firebase.crashlytics = "com.google.firebase:firebase-crashlytics-ktx"
    firebase.crashlyticsPlugin = "com.google.firebase:firebase-crashlytics-gradle:$versions.crashlyticsPluginVersion"
deps.firebase = firebase

deps.leakCanary = "com.squareup.leakcanary:leakcanary-android:$versions.leakCanaryVersion"

deps.junit = "org.junit.jupiter:junit-jupiter:$versions.junitVersion"

deps.mockk = "io.mockk:mockk:$versions.mockkVersion"

def coroutines = [:]
    coroutines.test = "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutineVersion"
deps.coroutines = coroutines

ext.deps = deps

def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.mavenCentral()
}
ext.addRepos = this.&addRepos
